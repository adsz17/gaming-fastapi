"""add ledger and idempotency"""

from alembic import op
import sqlalchemy as sa

revision = "366efed92ee6"
down_revision = "0001_initial"
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ledger_entries',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('idempotency_key', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idempotency_key')
    )
    op.create_index(op.f('ix_ledger_entries_user_id'), 'ledger_entries', ['user_id'], unique=False)
    op.add_column('rounds', sa.Column('idempotency_key', sa.String(length=255), nullable=False))
    op.alter_column(
        'rounds',
        'id',
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
        existing_nullable=False,
        autoincrement=True,
    )
    op.create_unique_constraint(None, 'rounds', ['idempotency_key'])
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rounds', type_='unique')
    op.alter_column('rounds', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('rounds', 'idempotency_key')
    op.drop_index(op.f('ix_ledger_entries_user_id'), table_name='ledger_entries')
    op.drop_table('ledger_entries')
    # ### end Alembic commands ###
